package com.casestudy.validator;

import java.util.HashSet;
import java.util.Set;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;
import javax.validation.ConstraintViolation;
import javax.validation.Validator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.CollectionUtils;

import com.casestudy.dto.ModelDto;
import com.casestudy.entity.Model;
import com.casestudy.repository.CarRepository;
import com.casestudy.repository.ModelRepository;

public class CarModelValidator implements ConstraintValidator<ValidCarModel, ModelDto> {
	@Autowired
	Validator validator;
	
	@Autowired
	ModelRepository modelRepository;

	@Override
	public boolean isValid(ModelDto modelDto, ConstraintValidatorContext constraintValidatorContext) {
		boolean isValid = true;
		
		Model dbModel = modelRepository.getById(modelDto.getModel_id());
		
		
		/*
								 * Set<ConstraintViolation<Model>> constraintViolations = new HashSet();
								 * constraintViolations = validator.validate(model); if
								 * (!CollectionUtils.isEmpty(constraintViolations)) {
								 * constraintValidatorContext.disableDefaultConstraintViolation(); for
								 * (ConstraintViolation<Model> violation : constraintViolations) {
								 * constraintValidatorContext.buildConstraintViolationWithTemplate(violation.
								 * getMessageTemplate()) .addConstraintViolation(); } isValid = false; }
								 */
		return isValid;
	}

	@Override
	public boolean isValid(Model value, ConstraintValidatorContext context) {
		// TODO Auto-generated method stub
		return false;
	}

}
